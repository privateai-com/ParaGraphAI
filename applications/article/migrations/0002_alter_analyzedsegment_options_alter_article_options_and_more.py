# Generated by Django 5.2.4 on 2025-07-28 13:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('article', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='analyzedsegment',
            options={'ordering': ['article', 'created_at'], 'verbose_name': 'Text segments analysed', 'verbose_name_plural': 'Text segments analysed'},
        ),
        migrations.AlterModelOptions(
            name='article',
            options={'ordering': ['-updated_at', '-created_at'], 'verbose_name': 'Scientific articles', 'verbose_name_plural': 'Scientific articles'},
        ),
        migrations.AlterModelOptions(
            name='articlecontent',
            options={'verbose_name': 'Content of articles from sources', 'verbose_name_plural': 'Content of articles from sources'},
        ),
        migrations.AlterField(
            model_name='article',
            name='authors',
            field=models.ManyToManyField(blank=True, related_name='articles', through='article.ArticleAuthor', to='article.author', verbose_name='Authors'),
        ),
        migrations.AlterField(
            model_name='article',
            name='is_user_initiated',
            field=models.BooleanField(db_index=True, default=False, help_text='True if this article was added by the user directly and not as a linked article.', verbose_name='Added by user directly'),
        ),
        migrations.AlterField(
            model_name='article',
            name='pdf_file',
            field=models.FileField(blank=True, max_length=500, null=True, upload_to='articles_pdf/', verbose_name='PDF file'),
        ),
        migrations.AlterField(
            model_name='article',
            name='primary_source_api',
            field=models.CharField(blank=True, help_text='The API from which the underlying metadata for this record was extracted (title, abstract).', max_length=100, null=True, verbose_name='Primary source API'),
        ),
        migrations.AlterField(
            model_name='article',
            name='structured_content',
            field=models.JSONField(blank=True, default=dict, help_text='Content of the article, organised into sections (e.g. abstract, introduction, methods, results, discussion, conclusion)', null=True, verbose_name='Structured content'),
        ),
        migrations.AlterField(
            model_name='article',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Дата обновления'),
        ),
        migrations.AlterField(
            model_name='articlecontent',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='article.article', verbose_name='Статья'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='manual_data_json',
            field=models.JSONField(blank=True, help_text='JSON with metadata of the cited article, if it is added manually (title, authors, year, etc.).', null=True, verbose_name='Manually entered data'),
        ),
        migrations.AlterField(
            model_name='referencelink',
            name='status',
            field=models.CharField(choices=[('pending_doi_input', 'Awaiting DOI input or lookup'), ('doi_lookup_in_progress', 'Searching for DOI'), ('doi_provided_needs_lookup', 'DOI provided, awaiting article fetch'), ('article_fetch_in_progress', 'Fetching article by DOI'), ('article_linked', 'Article found and linked'), ('article_not_found', 'Article not found by DOI'), ('manual_entry', 'Manually entered data'), ('manual_metadata_only', 'Manually entered metadata (not linked)'), ('error_doi_lookup', 'Error during DOI lookup'), ('error_article_fetch', 'Error fetching article'), ('error_processing', 'Processing error')], default='pending_doi_input', max_length=50, verbose_name='Link Status'),
        ),
    ]
